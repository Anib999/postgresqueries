//AS alias, || concat
1. SELECT name || ' ' || address AS "name address" FROM base_company
// user "" for names with spaces

//DESC || ASC
2. SELECT name FROM base_company ORDER BY name DESC
//for multiple
3. SELECT * FROM base_company ORDER BY name DESC, address ASC;

//The LENGTH() function accepts a string and returns the length of that string.
4. SELECT name, LENGTH(name) AS na FROM base_company

// na can directly be accessed
5. SELECT name, LENGTH(name) AS na FROM base_company ORDER BY na DESC

// ORDER BY sort_expression [ASC | DESC] [NULLS FIRST | NULLS LAST]

// The DISTINCT clause is used in the SELECT statement to remove duplicate rows from a result set.
6. SELECT DISTINCT bcolor, fcolor FROM distinct_demo ORDER BY bcolor, fcolor;

//DISTINCT with ON
7. SELECT DISTINCT ON (bcolor) bcolor, fcolor FROM distinct_demo ORDER BY bcolor, fcolor;

// use '' on after where
8. SELECT name FROM base_company WHERE name = 'anib';

//same operator OR , AND
9. SELECT * FROM base_company WHERE name = 'anib' OR address = 'New';

// cases needs to be matched
10. SELECT * FROM base_company WHERE name in ('anib', 'chic');

// in (%) followed by string
11. SELECT * FROM base_company WHERE name LIKE'ani%';

//length function with between
12. SELECT name, LENGTH(name) name_len FROM base_company WHERE LENGTH(name) BETWEEN 2 AND 3;

//<> == !=
13. SELECT name from base_company WHERE name LIKE 'an%' AND name <> 'chic'

// limit  limits the data returned null returns all
14. SELECT * FROM distinct_demo LIMIT 6

// offset offsets the data
15. SELECT * FROM distinct_demo LIMIT 6 OFFSET 2

//note limit is not sql standard, fetch is sql standard introduced in 2008 sql
16. SELECT * FROM distinct_demo FETCH FIRST ROW ONLY

//select 6 rows
17. SELECT * FROM distinct_demo FETCH FIRST 6 ROW ONLY

// offset specified rows
18. SELECT * FROM distinct_demo OFFSET 2 ROWS FETCH FIRST 6 ROW ONLY

//in
19. SELECT * FROM distinct_demo WHERE id IN (1,2)

//OR
20. SELECT * FROM distinct_demo WHERE id = 1 OR id = 3

//not in or <> 
21. SELECT * FROM distinct_demo WHERE id NOT IN (1,2)

// BETWEEN
22. SELECT * FROM sort_demo WHERE num BETWEEN 1 AND 3

//NOT BETWEEN
23. SELECT * FROM sort_demo WHERE num NOT BETWEEN 1 AND 3

//IMPORTANT SELECT USING DATE
24. SELECT * FROM sort_demo WHERE created_date BETWEEN '2022-08-11' AND '2022-08-19'; 